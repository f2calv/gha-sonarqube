name: SonarQube Analysis
author: SonarSource SA / Alex Vincent
description: Performs code-quality/code-smells analysis.

inputs:
  GITHUB_TOKEN:
    description: i.e. inputs.GITHUB_TOKEN
    required: true
  SONAR_TOKEN:
    description: i.e. inputs.SONAR_TOKEN
    required: true
  SONAR_HOST_URL:
    required: false
    default: https://sonarcloud.io
  BuildConfiguration:
    description: i.e. Debug or Release
    default: Release
    required: false
    
runs:
  using: composite
  steps:
    # Steps below from https://docs.sonarsource.com/sonarqube/latest/devops-platform-integration/github-integration/adding-sonarqube-analysis-to-your-workflow/ + modifications!
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 1.17
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~\.sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarQube scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarQube scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Build and analyze
      shell: powershell
      run: |
        if ("${{ inputs.SONAR_TOKEN }}" -ne "") {
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ github.actor }}_${{ github.event.repository.name }}" /o:"${{ github.actor }}" /d:sonar.token="${{ inputs.SONAR_TOKEN }}" /d:sonar.host.url="${{ inputs.SONAR_HOST_URL }}"
          dotnet build -c ${{ inputs.BuildConfiguration }}
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ inputs.SONAR_TOKEN }}"
        }
        else {
          Write-Host "::warning title=SONAR_TOKEN::SONAR_TOKEN is not set, skipping analysis of the build."
        }
